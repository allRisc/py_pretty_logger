name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  tests:
    uses: allrisc/py_pretty_logger/.github/workflows/ci.yml@main

  build:
    name: Build Distro
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup UV
        uses: astral-sh/setup-uv@v6

      - name: Build
        run: uv build

      - name: Store the distro packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/py_pretty_logger
    permissions:
      id-token: write

    steps:
      - name: Download distro packages
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish Distro to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign the Python Distro ans Upload to GitHub Releases

    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download all the distros
      uses: actions/download-artifact@v5
      with:
        name: python-package-distributions
        path: dist/

    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""

    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'